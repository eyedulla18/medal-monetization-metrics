{"version":3,"sources":["components/PolicyDropdown/PolicyDropdown.js","components/CountryCard/CountryCard.js","components/CountryCardGroup/CountryCardGroup.js","components/OlympicsBar/OlympicsBar.js","App.js","reportWebVitals.js","components/testComponent/testComponent.js","index.js"],"names":["ComboBox","setPolicy","prizeMoneyCountryList","countries","country","PrizeMoneyCountry","push","label","medalData","ReadPrizeMoneyCountryJSON","React","createElement","Autocomplete","onChange","event","value","disablePortal","options","sx","width","renderInput","params","TextField","Object","assign","defaultValue","PolicyDropdown","_ref","defaultProps","cardColor","ranking","theme","console","log","palette","primary","gold","silver","bronze","CountryCard","countryName","goldCount","silverCount","bronzeCount","imagePath","Box","p","Paper","elevation","backgroundColor","useTheme","Masonry","columns","Typography","level","EmojiMapJson","countryToEmoji","CountryCardGroup","policy","goldReward","silverReward","bronzeReward","processedMedalCount","MedalCountJson","numGold","numSilver","numBronze","goldMoney","silverMoney","bronzeMoney","totalMoney","countryProcessedData","sort","a","b","countryCardGroupList","i","length","processMedalCountJson","OlympicsBar","Toolbar","olympicBlue","olympicYellow","olympicBlack","olympicGreen","olympicRed","createTheme","nonMedal","light","blue","main","purple","dark","background","paper","default","App","useState","ThemeProvider","container","justify","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","TestComponent","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.619577c2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport PrizeMoneyCountry from '../../data/prize_money_country.json'\nimport { useState } from 'react';\n\nfunction ComboBox(setPolicy) {\n  var prizeMoneyCountryList = ReadPrizeMoneyCountryJSON()\n  return (\n    <Autocomplete\n      onChange={\n        (event, value) => setPolicy(value)\n      }\n      disablePortal\n      options={prizeMoneyCountryList}\n      sx={{ width: 300 }}\n      renderInput={(params) => (\n        (<TextField {...params} label=\"Country Award Policy\" />)\n      )}\n      defaultValue={()=>{\n        setPolicy(prizeMoneyCountryList[9])\n        return prizeMoneyCountryList[9]\n      }}\n    />\n  );\n}\n\nfunction ReadPrizeMoneyCountryJSON() {\n  var countries = []\n  for (const country in PrizeMoneyCountry) {\n    countries.push({\"label\":country, \"medalData\": PrizeMoneyCountry[country]})\n  }\n  return countries\n}\n\nconst PolicyDropdown = ({setPolicy}) => {\n  return (\n    <div>\n      {ComboBox(setPolicy)}\n    </div>\n  )\n};\n\nPolicyDropdown.propTypes = {};\n\nPolicyDropdown.defaultProps = {};\n\nexport default PolicyDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Masonry from '@mui/lab/Masonry';\nimport EmojiMapJson from '../../data/emoji_map.json'\nimport { useTheme } from '@mui/material/styles';\n\nfunction countryToEmoji(countryName){\n  return EmojiMapJson[countryName]\n}\n\nfunction cardColor(ranking, theme){\n  console.log(\"ranking: \", ranking)\n  if(ranking===1){\n    console.log(1)\n    console.log(theme.palette)\n    return theme.palette.primary.gold\n  }\n  if(ranking===2){\n    console.log(2)\n    console.log(theme.palette.silver)\n    return theme.palette.primary.silver\n  }\n  if(ranking===3){\n    console.log(3)\n    console.log(theme.palette.primary.bronze)\n    return theme.palette.primary.bronze\n  }\n  // return \"#d4d4d8\"\n  // return sx={{ backgroundColor: yellow[300] }}\n}\n\nconst CountryCard = ({countryName, ranking, goldCount, silverCount, bronzeCount, imagePath}) => {\n  // const theme = useTheme()\n  return (<Box sx={{ p: 1 }}>\n    <Paper elevation={3} sx={{ backgroundColor: cardColor(ranking, useTheme())}}>\n      <Masonry columns={5} >\n        <Typography level=\"title-md\">{countryToEmoji(countryName)}</Typography>\n        <Typography>{ranking}</Typography>\n        <Typography>{goldCount}</Typography>\n        <Typography>{silverCount}</Typography>\n        <Typography>{bronzeCount}</Typography>\n      </Masonry>\n    </Paper>\n  </Box>)\n};\n\nCountryCard.propTypes = {};\n\nCountryCard.defaultProps = {};\n\nexport default CountryCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CountryCard from '../CountryCard/CountryCard';\nimport Box from '@mui/material/Box';\nimport MedalCountJson from '../../data/medal_count.json'\n\nfunction processMedalCountJson(policy){\n  var goldReward = policy[\"medalData\"][2024][\"gold\"]\n  var silverReward = policy[\"medalData\"][2024][\"silver\"]\n  var bronzeReward = policy[\"medalData\"][2024][\"bronze\"]\n\n  var processedMedalCount = []\n  for(const country in MedalCountJson){\n    var numGold = MedalCountJson[country][2024][\"gold\"]\n    var numSilver = MedalCountJson[country][2024][\"silver\"]\n    var numBronze = MedalCountJson[country][2024][\"bronze\"]\n\n    var goldMoney = numGold * goldReward\n    var silverMoney = numSilver * silverReward\n    var bronzeMoney = numBronze * bronzeReward\n    var totalMoney = goldMoney + silverMoney + bronzeMoney\n\n    var countryProcessedData = {}\n    countryProcessedData[\"country\"] = country\n    countryProcessedData[\"goldMoney\"] = goldMoney\n    countryProcessedData[\"silverMoney\"] = silverMoney\n    countryProcessedData[\"bronzeMoney\"] = bronzeMoney\n    countryProcessedData[\"totalMoney\"] = totalMoney\n\n    countryProcessedData[\"numGold\"] = numGold\n    countryProcessedData[\"numSilver\"] = numSilver\n    countryProcessedData[\"numBronze\"] = numBronze\n    processedMedalCount.push(countryProcessedData)\n\n  }\n  processedMedalCount.sort((a,b)=>{\n    if (a[\"totalMoney\"] > b[\"totalMoney\"]) {\n      return -1;\n    }\n    return 1\n  })\n\n  var countryCardGroupList = []\n  for(let i=0; i<processedMedalCount.length; ++i){\n    countryCardGroupList.push((\n      // {countryName, ranking, goldCount, silverCount, bronzeCount, imagePath}\n      <Box>\n        <CountryCard countryName={processedMedalCount[i][\"country\"]}\n          ranking={i+1} goldCount={processedMedalCount[i][\"numGold\"]}\n          silverCount={processedMedalCount[i][\"numSilver\"]}\n          bronzeCount={processedMedalCount[i][\"numBronze\"]}\n          imagePath={\"dummy path\"} \n        >\n        </CountryCard>\n      </Box>\n    ))\n  }\n  return countryCardGroupList\n\n}\n\n\nconst CountryCardGroup = ({ policy }) => {\n  if(policy==0){\n    return (\n      <div>\n      </div>\n    )\n  }\n  console.log(\"countrycardgroup policy\")\n  console.log(policy)\n  return (\n    <div>\n      {processMedalCountJson(policy)}\n    </div>\n  )\n};\n\nCountryCardGroup.propTypes = {};\n\nCountryCardGroup.defaultProps = {};\n\nexport default CountryCardGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@mui/material/Toolbar';\nimport { Box } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n\nconst OlympicsBar = () => {\n  // <Box sx={{ backgroundColor: \"#EE334E\"}}> </Box>\n  console.log(\"bar theme test\", useTheme().palette)\n  return (<Toolbar >\n    <Box width={0.2} sx={{ backgroundColor: useTheme().palette.primary.olympicBlue }}>.</Box>\n    <Box width={0.2} sx={{ backgroundColor: useTheme().palette.primary.olympicYellow }}>.</Box>\n    <Box width={0.2} sx={{ backgroundColor: useTheme().palette.primary.olympicBlack }}>.</Box>\n    <Box width={0.2} sx={{ backgroundColor: useTheme().palette.primary.olympicGreen }}>.</Box>\n    <Box width={0.2} sx={{ backgroundColor: useTheme().palette.primary.olympicRed }}>.</Box>\n  </Toolbar>)\n};\n\nOlympicsBar.propTypes = {};\n\nOlympicsBar.defaultProps = {};\n\nexport default OlympicsBar;\n","import React from 'react';\nimport './App.css';\nimport PolicyDropdown from './components/PolicyDropdown/PolicyDropdown';\nimport { useState } from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CountryCardGroup from './components/CountryCardGroup/CountryCardGroup';\nimport Box from '@mui/material/Box';\nimport { blue, pink, purple } from \"@mui/material/colors\";\nimport OlympicsBar from './components/OlympicsBar/OlympicsBar';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      gold: \"#fde047\",\n      silver: \"#d4d4d8\",\n      bronze: \"#ca8a04\",\n      nonMedal: \"#ffffee\",\n      olympicBlue: \"#0081C8\",\n      olympicYellow: \"#FCB131\",\n      olympicBlack: \"#000000\",\n      olympicGreen: \"#00A651\",\n      olympicRed: \"#EE334E\",\n      light: blue[300],\n      main: purple[500],\n      dark: blue[700],\n    },\n    background: {\n      paper: '#FFFFEE',\n      default: \"#222222\"\n    },\n  },\n});\n\nfunction App() {\n\n  const [policy, setPolicy] = useState(0);\n  console.log(\"THIS IS THE POLICY: \", policy)\n  return (\n    <ThemeProvider theme={theme}>\n      <OlympicsBar></OlympicsBar>\n      <Box width={0.6} container justify = \"center\">\n        <PolicyDropdown setPolicy={setPolicy} >\n        </PolicyDropdown>\n        <CountryCardGroup policy={policy}>\n        </CountryCardGroup>\n      </Box>\n      <OlympicsBar></OlympicsBar>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst TestComponent = () => (\n  <div>\n    testComponent Component\n  </div>\n);\n\nTestComponent.propTypes = {};\n\nTestComponent.defaultProps = {};\n\nexport default TestComponent;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport TestComponent from './components/testComponent/testComponent';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    {/* <TestComponent></TestComponent> */}\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}